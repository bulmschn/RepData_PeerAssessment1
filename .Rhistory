pexp(11, 1/10, lower.tail-FALSE)
pexp(11, 1/10, lower.tail=FALSE)
f <- function(x) {x}
integrate(f, lower = .1, upper = .7)
integrate(f, lower = 0, upper = 1)
xvals <- seq(-.5, 1.5, by = .001)
yvals <- rep(0, length(xvals))
yvals[xvals > 0 & xvals < 1] <- 1
plot(xvals, yvals)
plot(xvals, yvals, type = "n")
plot(xvals, yvals, frame= FALSE)
f <- yvals
integrate(f, lower = 0, upper = 1)
integrate(f, lower = 0, upper = 1)
xvals <- seq(0, 20, length = 1000)
plot(xvals, dexp(xvals, 1/5), xlab = "Survival time in years",
ylab = "density",
frame = FALSE,
type = "l")
polygon(c(xvals[xvals >= 6], rev(xvals[xvals >= 6])),
c(dexp(xvals[xvals >= 6], 1/5), rep(0, sum(xvals >= 6))),
col = grey(.5)
)
xvals <- seq(0, 20, length = 1000)
plot(xvals, dexp(xvals, 1/10), xlab = "Survival time in years",
ylab = "density",
frame = FALSE,
type = "l")
polygon(c(xvals[xvals >= 6], rev(xvals[xvals >= 6])),
c(dexp(xvals[xvals >= 6], 1/5), rep(0, sum(xvals >= 6))),
col = grey(.5)
)
xvals <- seq(0, 20, length = 1000)
plot(xvals, dexp(xvals, 1/10), xlab = "Survival time in years",
ylab = "density",
frame = FALSE,
type = "l")
polygon(c(xvals[xvals >= 6], rev(xvals[xvals >= 6])),
c(dexp(xvals[xvals >= 6], 1/10), rep(0, sum(xvals >= 6))),
col = grey(.5)
)
xvals <- seq(0, 20, length = 1000)
plot(xvals, dexp(xvals, 1/10), xlab = "Survival time in years",
ylab = "density",
frame = FALSE,
polygon(c(xvals[xvals >= 6], rev(xvals[xvals >= 6])),
c(dexp(xvals[xvals >= 6], 1/10), rep(0, sum(xvals >= 6))),
col = grey(.5)
)
xvals <- seq(0, 20, length = 1000)
plot(xvals, dexp(xvals, 1/10), xlab = "Survival time in years",
ylab = "density",
frame = FALSE,
polygon(c(xvals[xvals >= 6], rev(xvals[xvals >= 6])),
c(dexp(xvals[xvals >= 6], 1/10), rep(0, sum(xvals >= 6))),
col = grey(.5)
)
)
.01*(1-.01)^2
(1-2)^2
(4-2)^2
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(ggplot2)
qplot(votes, rating, data = movies, panel = panel.loess)
qplot(votes, rating, data = movies) + geom_smooth()
qplot(votes, rating, data = movies, smooth = "loess")
?phyper()
overlapeg_tbl = 8
eg = 344
tbo = 143
pop = 1125
1 - phyper(overlapeg_tbl - 1, tbo, pop- tbo, eg)
1 - phyper(overlapeg_tbl - 1, eg, pop - eg, tbo)
phyper(overlapeg_tbl - 1, eg, pop - eg, tbo)
phyper(overlapeg_tbl, eg, pop - eg, tbo)
overlap_e_ce = 44
1-phyper(overlap_e_ce, eg, pop- eg, 436)
phyper(overlap_e_ce, eg, pop- eg, 436)
phyper(7, eg, pop- eg, 121)
1- phyper(7-1, eg, pop- eg, 121)
1- phyper(7, eg, pop- eg, 121)
library(plyr)
library(reshape2)
library(ggplot2)
unzip("activity.zip")
act <- read.csv("activity.csv")
totalSteps <- tapply(act$steps, act$date, FUN = sum)
totalSteps <- melt(totalSteps)
names(totalSteps) <- c("date", "totalSteps")
setwd("~/Box Sync/R/RepRes/RepData_PeerAssessment1")
library(plyr)
library(reshape2)
library(ggplot2)
unzip("activity.zip")
act <- read.csv("activity.csv")
totalSteps <- tapply(act$steps, act$date, FUN = sum)
totalSteps <- melt(totalSteps)
names(totalSteps) <- c("date", "totalSteps")
head(act)
max(act$interval)
m.act <- melt(act, measure = steps, id = c(date, interval))
m.act <- melt(act, measure = "steps", id = c("date", "interval"))
byInt <- dcast(m.act, steps ~ interval)
byInt <- dcast(m.act, "steps" ~ "interval")
?dcast()
byInt <- dcast(m.act, interval ~ steps, fun = mean)
head(m.act)
byInt <- dcast(m.act, variable ~ interval, fun = mean)
View(byInt)
?melt()
m.act <- melt(act, measure = "steps", id = c("date", "interval"), na.rm = TRUE)
byInt <- dcast(m.act, interval ~ variable, fun = mean)
View(byInt)
plot(byInt)
plot(byInt, type = "l")
ggplot(byInt, aes(x = interval, y = steps)) + geom_line()
max(steps)
max(byInt$steps)
maxId = which(byInt == 206.1698)
maxId = which(byInt$steps == 206.1698)
maxId = which(byInt$steps == max(byInt$steps))
byInt[maxId,]
byInt[maxId,]
?merge()
act %>%
act2 <- act
summary(act)
?group_by()
?mutate()
act2 %>%
group_by(interval) %>%
mutate(steps, replace(steps, is.na(steps), mean(steps, na.rm=TRUE)))
?ave()
transform(act2,
steps = ifelse(is.na(steps),
ave(steps, interval, FUN = function(x) mean(x, na.rm = TRUE)),
profit))
transform(act2,
steps = ifelse(is.na(steps),
ave(steps, interval, FUN = function(x) mean(x, na.rm = TRUE)),
steps))
act2 <- transform(act2,
steps = ifelse(is.na(steps),
ave(steps, interval, FUN = function(x) mean(x, na.rm = TRUE)),
steps))
summary(act2)
?which()
length(is.na(act$steps))
?is.na()
length(nas = act$steps[is.na(act$steps)])
nas = act$steps[is.na(act$steps)]
length(nas)
summary(act)
totalSteps2 <- tapply(act2$steps, act2$date, FUN = sum)
totalSteps2 <- melt(totalSteps)
names(totalSteps2) <- c("date", "totalSteps")
ggplot(totalSteps2, aes(x = totalSteps) ) + geom_bar() + labs(title = "Histogram of total number of steps per day")
summary(totalSteps2)
View(totalSteps2)
ggplot(totalSteps, aes(x = totalSteps) ) + geom_bar() + labs(title = "Histogram of total number of steps per day")
summary(totalSteps)
#gives you values for mean and median
table(totalSteps2)
head(totalsteps2)
head(totalSteps2)
hist(totalSteps2$totalSteps)
totalSteps2 <- tapply(act2$steps, act2$date, FUN = sum)
totalSteps2 <- melt(totalSteps2)
names(totalSteps2) <- c("date", "totalSteps")
ggplot(totalSteps2, aes(x = totalSteps2) ) + geom_bar() + labs(title = "Histogram of total number of steps per day")
ggplot(totalSteps2, aes(x = totalSteps) ) + geom_bar() + labs(title = "Histogram of total number of steps per day")
summary(totalSteps2)
summary(totalSteps)
?weekdays()
class(act2$date)
act2$date = as.Date(act2$date, format = "%y%m%d")
isWeekday = weekdays(act2$date)
head(isWeekday)
table(isWeekday)
act2$wkday = ifelse(!weekdays(act2$date) %in% c("Saturday", "Sunday"),
"weekday","weekend")
head(act2)
ggplot(act2, aes(x= interval, y= steps )) + geom_line() + facet_grid(~wkday)
act2$wkday = ifelse(weekdays(act2$date), "weekday","weekend")
ggplot(act2, aes(x= interval, y= steps )) + geom_line() + facet_grid(~wkday)
class(act2$date)
act2$wkday = weekdays(act2$date)
head(act2$wkday)
df = data.frame(date=c("2012-02-01", "2012-02-01", "2012-02-02"))
df$day <- weekdays(as.Date(df$date))
df$day
head(act2$date)
act2 <- act
act2 <- transform(act2,
+           steps = ifelse(is.na(steps),
+                           ave(steps, interval, FUN = function(x) mean(x, na.rm = TRUE)),
+                           steps))
act2 <- act
act2 <- transform(act2, steps = ifelse(is.na(steps), ave(steps, interval, FUN = function(x) mean(x, na.rm = TRUE)), steps))
act2 <- act
act2 <- transform(act2, steps <- ifelse(is.na(steps), ave(steps, interval, FUN = function(x) mean(x, na.rm = TRUE)), steps))
head(act2)
summary(act2)
act2 <- act
act2 <- transform(act2, ifelse(is.na(steps), ave(steps, interval, FUN = function(x) mean(x, na.rm = TRUE)), steps))
summary(act2)
act2 <- transform(act2, ifelse(is.na(steps), ave(steps, interval, FUN = function(x) mean(x, na.rm = TRUE)), steps))
summary(act2)
act2 <- transform(act2,
= ifelse(is.na(steps),
ave(steps, interval, FUN = function(x) mean(x, na.rm = TRUE)),
steps))
act2 <- transform(act2,
= ifelse(is.na(steps),
ave(steps, interval, FUN = function(x) mean(x, na.rm = TRUE)),
steps)))
act2 <- transform(act2,
steps = ifelse(is.na(steps),
ave(steps, interval, FUN = function(x) mean(x, na.rm = TRUE)),
steps))
summary(act2)
act2 <- act
act2 <- transform(act2,
steps = ifelse(is.na(steps),
ave(steps, interval, FUN = function(x) mean(x, na.rm = TRUE)),  steps))
act2$date <- as.Date(act2$date, format = "%y%m%d")
head(act2$date)
act2$date <- as.Date(act2$date)
head(act2$date)
act2 <- act
act2 <- transform(act2,
steps = ifelse(is.na(steps),
ave(steps, interval, FUN = function(x) mean(x, na.rm = TRUE)),  steps))
act2$date <- as.Date(act2$date)
head(act2$date)
class(act2$date)
act2$day = weekdays(act2$Date)
act2$day = weekdays(act2$date)
head(act2$day)
act2$wkOrwkend = ifelse(act2$day !%in% c("Saturday", "Sunday"), "weekday", "weekend")
act2$wkOrwkend = ifelse(act2$day ! %in% c("Saturday", "Sunday"), "weekday", "weekend")
act2$wkOrwkend = ifelse(!(act2$day %in% c("Saturday", "Sunday")), "weekday", "weekend")
head(act2$wkOrwkend)
ggplot(act2, aes(x= interval, y= steps )) + geom_line() + facet_grid(~wkOrwkend)
